{"version":3,"sources":["contexts/AuthContext.tsx","contexts/DashboardRoutingContext.tsx","contexts/MainProvider.tsx","utils/theme/breakpoints.ts","utils/theme/colors.ts","utils/theme/getThemeByPath.ts","utils/theme/spacings.ts","utils/theme/globalStyle.ts","utils/theme/radius.ts","utils/theme/shadows.ts","utils/theme/typography.ts","utils/theme/zIndex.ts","utils/toasts/success.ts","utils/toasts/error.ts","contexts/ThemeContext.tsx","assets/png/examples/owm-api-app.png","assets/png/examples/sb.png","assets/png/examples/solar-dashboard.png","assets/png/examples/sweet-landing-light.png","assets/png/gabao/gabao-gradient-full.png","assets/svg/icons/apple/styles.ts","assets/svg/icons/apple/index.tsx","assets/svg/icons/dashboard/styles.ts","assets/svg/icons/dashboard/index.tsx","assets/svg/icons/discord/styles.ts","assets/svg/icons/discord/index.tsx","assets/svg/icons/facebook/styles.ts","assets/svg/icons/facebook/index.tsx","assets/svg/icons/github/styles.ts","assets/svg/icons/github/index.tsx","assets/svg/icons/gmail/styles.ts","assets/svg/icons/gmail/index.tsx","assets/svg/icons/google/styles.ts","assets/svg/icons/google/index.tsx","assets/svg/icons/instagram/styles.ts","assets/svg/icons/instagram/index.tsx","assets/svg/icons/linkedIn/styles.ts","assets/svg/icons/linkedIn/index.tsx","assets/svg/icons/listStatus/styles.ts","assets/svg/icons/listStatus/index.tsx","assets/svg/icons/medium/styles.ts","assets/svg/icons/medium/index.tsx","assets/svg/icons/menu/styles.ts","assets/svg/icons/menu/index.tsx","assets/svg/icons/noteEdit/styles.ts","assets/svg/icons/noteEdit/index.tsx","assets/svg/icons/SvgIcons.tsx","components/Atoms/BaseInput/styles.ts","components/Atoms/BaseInputFile/styles.ts","components/Atoms/DashboardContentWrapper/styles.ts","components/Atoms/Typography/styles.ts","components/Atoms/Typography/index.tsx","components/Atoms/DrawableMenuItem/styles.ts","components/Atoms/Glass/styles.ts","components/Atoms/ImageBck/styles.ts","components/Atoms/ImageBck/index.tsx","components/Atoms/PageWrapper/styles.ts","components/Atoms/PageWrapper/index.tsx","components/Atoms/Paper/styles.ts","components/Atoms/Steps/styles.ts","components/Molecules/Button/styles.ts","components/Molecules/A/styles.ts","components/Molecules/ButtonIcon/styles.ts","components/Molecules/ButtonIcon/index.tsx","components/Molecules/Card/styles.ts","components/Molecules/Card/index.tsx","components/Molecules/Input/styles.ts","components/Molecules/LineDivider/styles.ts","components/Molecules/SectionTitleWrapper/styles.ts","components/Molecules/Select/styles.ts","components/Organisms/Drawable/styles.ts","components/Organisms/Header/styles.ts","pages/public/Demo/styles.ts","pages/public/Demo/index.tsx","pages/public/NotFound/styles.ts","pages/public/NotFound/index.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","AuthProvider","children","useState","undefined","credentials","setCredentials","Provider","value","isAuthenticated","token","uid","updateCredentials","updatedCredentials","DashboardRoutingContext","DashboardRoutingProvider","isShowingDrawable","setIsShowingDrawable","onChangeShowingDrawable","MainProvider","breakpoints","mobile","mobileWider","tablet","laptop","largeLaptop","fhd","defaultColorTheme","dark","error","main","warning","success","info","text","darker","lighter","disabled","neutral1","primary","textContrast","environment","light","getThemeByPath","item","theme","_","get","Spacings","insane","huge","giant","big","large","medium","short","small","smaller","meaningless","insaneSpacing","spacings","createGlobalStyle","radius","shadows","s1","s2","s3","typographyTheme","paragraph","fontSize","fontWeight","footer","header","headline1","headline2","headline3","headline4","headline5","headline6","zIndex","layer0","layer1","layer2","layer3","layer4","layer5","content","toast","type","ThemeContext","ThemeProvider","themeChoice","setThemeChoice","colors","typography","setTheme","handleChangeThemeChoice","choice","Path","styled","path","fillColor","Apple","color","size","width","height","viewBox","fill","d","Dashboard","Discord","Facebook","Github","GMail","Google","Instagram","LinkedIn","ListStatus","Medium","Menu","NoteEdit","SVGIcons","apple","props","google","facebook","menu","dashboard","listStatus","noteEdit","discord","gmail","instagram","linkedIn","github","typographyFontSize","variant","typographyFontWeight","input","textColor","environmentDarker","div","textAlign","paragraphFontSize","paragraphFontWeight","headline1FontSize","headline1FontWeight","headline2FontSize","headline2FontWeight","headline3FontSize","headline3FontWeight","headline4FontSize","headline4FontWeight","headline5FontSize","headline5FontWeight","headline6FontSize","headline6FontWeight","headerFontSize","headerFontWeight","footerFontSize","footerFontWeight","Paragraph","p","Headline1","h1","Headline2","h2","Headline3","h3","Headline4","h4","Headline5","h5","Headline6","h6","Header","Footer","Typography","typographyProps","typographyAlign","spacingMedium","spacingSmall","environmentNeutral1","environemntMain","smallRadius","shadowS2","button","active","attrs","InnerImage","src","String","ImageBck","rest","Wrapper","PageWrapper","environmentMain","radiusShort","shadowS1","zIndexLayer1","primaryMain","textDisabled","smallSpacing","mediumSpacing","textColorByStatus","reached","unreached","lineColorByStatus","handleTextColor","cellStatus","a","shortSpacing","textMain","radiusMedium","spacingShort","bkpTablet","ButtonIconWrapper","ButtonTextWrapper","ButtonIconText","style","IconWrapper","ButtonIcon","btnText","icon","iconProps","href","onClick","preventDefaultOnClick","e","preventDefault","breakpointTablet","mediumRadius","Anchor","InnerWrapper","ImageWrapper","TextWrapper","DescriptionWrapper","SubtitleWrapper","TechsWrapper","TechItemWrapper","TechBadge","img","Card","imageSrc","description","title","techs","map","badge","alt","lineColor","textVariant","select","option","zIndexLayer2","isShowing","headerColor","bigSpacing","breakpointLaptop","breakpointLargeLaptop","breakpointFhd","SectionWrapper","HeroWrapper","GabaoGradientFull","HeroTextWrapper","ContentWrapper","defaultAvatarSize","TitleWrapper","DemosSubtitleWrapper","CardsWrapper","SectionCentralizer","CardWrapper","SocialsWrapper","SocialWrapper","GoogleCalendarSubtitleWrapper","GoogleCalendarWrapper","IFrame","iframe","examples","ExampleSolarDashboard","ExampleSweetLandingLight","ExampleOwmApiApp","ExampleSB","Demo","socials","navigator","clipboard","writeText","key","tabletBreakpoint","Centralizer","Text","NotFound","Routes","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f209df58.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\ntype AuthContextData = {\n  /**\n   * The variable that wraps all logic that determines wether an user is authenticated.\n   */\n  isAuthenticated: () => boolean;\n  credentials?: Credentials;\n  updateCredentials: (x: Credentials) => void;\n};\n\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData,\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [credentials, setCredentials] = useState<Credentials | undefined>(\n    undefined,\n  );\n\n  const updateCredentials = (updatedCredentials: Partial<Credentials>) => {\n    setCredentials({ ...credentials, ...updatedCredentials });\n  };\n\n  const isAuthenticated = (): boolean => {\n    if (credentials) {\n      const { token, uid } = credentials;\n\n      return !!token && !!uid;\n    }\n\n    return false;\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isAuthenticated, updateCredentials, credentials }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext, useState } from 'react';\n\ntype DashboardRoutingContextData = {\n  isShowingDrawable: boolean;\n  onChangeShowingDrawable: () => void;\n  setIsShowingDrawable: (x: boolean) => void;\n};\n\nexport const DashboardRoutingContext = createContext<DashboardRoutingContextData>(\n  {} as DashboardRoutingContextData,\n);\n\nexport const DashboardRoutingProvider: React.FC = ({ children }) => {\n  const [isShowingDrawable, setIsShowingDrawable] = useState(false);\n\n  const onChangeShowingDrawable = () => {\n    setIsShowingDrawable(!isShowingDrawable);\n  };\n\n  return (\n    <DashboardRoutingContext.Provider\n      value={{\n        isShowingDrawable,\n        onChangeShowingDrawable,\n        setIsShowingDrawable,\n      }}\n    >\n      {children}\n    </DashboardRoutingContext.Provider>\n  );\n};\n","import React from 'react';\nimport { AuthProvider, DashboardRoutingProvider, ThemeProvider } from './index';\n\nexport const MainProvider: React.FC = ({ children }) => {\n  return (\n    <DashboardRoutingProvider>\n      <AuthProvider>\n        <ThemeProvider>{children}</ThemeProvider>\n      </AuthProvider>\n    </DashboardRoutingProvider>\n  );\n};\n","const breakpoints: Breakpoints = {\n  mobile: 320,\n  mobileWider: 425,\n  tablet: 768,\n  laptop: 1024,\n  largeLaptop: 1440,\n  fhd: 1920,\n};\n\nexport default breakpoints;\n","export const defaultColorTheme: ColorThemes = {\n  dark: {\n    error: {\n      main: '#ed4747',\n    },\n    warning: {\n      main: '#eded47',\n    },\n    success: {\n      main: '#78FFB6',\n    },\n    info: {\n      main: '#478fed',\n    },\n    text: {\n      darker: '#1a1a1a',\n      main: '#FDFDFD', // Already defined\n      lighter: '#fff',\n      disabled: '#858ca2', // Already defined\n      neutral1: '#A1A7BB', // Already defined\n    },\n    primary: {\n      darker: '#cf5711',\n      main: '#EE5C3E',\n      lighter: '#ffccad',\n      textContrast: '#1a1a1a',\n    },\n    environment: {\n      darker: '#15191F', // Already defined\n      main: '#23262E', // Already defined\n      lighter: '#333845', // Already defined\n      neutral1: '#323546', // Already defined\n    },\n  },\n  light: {\n    error: {\n      main: '#ed4747',\n    },\n    warning: {\n      main: '#eded47',\n    },\n    success: {\n      main: '#78FFB6',\n    },\n    info: {\n      main: '#478fed',\n    },\n    primary: {\n      darker: '#cf5711',\n      main: '#EE5C3E',\n      lighter: '#ffccad',\n      textContrast: '#1a1a1a',\n    },\n    text: {\n      darker: '#141414',\n      main: '#303030', // Already defined\n      lighter: '#ffffff',\n      disabled: '#808a9d', // Already defined\n      neutral1: '#59677F', // Already defined\n    },\n    environment: {\n      darker: '#F9FAFD', // Already defined\n      main: '#FFFFFF', // Already defined\n      lighter: '#FFFFFF', // Already defined\n      neutral1: '#EFF2F5', // Already defined\n    },\n  },\n};\n\nexport default defaultColorTheme;\n","import _ from 'lodash';\nimport { DefaultTheme } from 'styled-components';\n\ntype PropTheme = {\n  theme: DefaultTheme;\n};\n\nconst getThemeByPath = (item: AppThemeKeys) => ({ theme }: PropTheme): string =>\n  _.get(theme, item);\n\nexport default getThemeByPath;\n","export const Spacings: Spacings = {\n  insane: 48,\n  huge: 40,\n  giant: 32,\n  big: 26,\n  large: 20,\n  medium: 16,\n  short: 12,\n  small: 8,\n  smaller: 4,\n  meaningless: 2,\n};\n\nexport default Spacings;\n","import { createGlobalStyle } from 'styled-components';\nimport breakpoints from './breakpoints';\nimport spacings from './spacings';\n\nconst { tablet, laptop, largeLaptop, fhd } = breakpoints;\nconst { insane: insaneSpacing } = spacings;\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 1.4rem;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    \n    @media (max-width: ${fhd}px) {\n      font-size: 1.2rem;\n    }\n\n    @media (max-width: ${largeLaptop}px) {\n      font-size: 1.0rem;\n    }\n\n    @media (max-width: ${laptop}px) {\n      font-size: 0.8rem;\n    }\n\n    @media (max-width: ${tablet}px) {\n      font-size: 0.6rem;\n    }\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n  }\n\n  button,\n  input,\n  select {\n    border: none;\n    outline: none;\n    background-color: #0000;\n  }\n\n  // Animations\n  @keyframes opacity-fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes opacity-fade-out {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes padding-left-fade-in {\n    0% {\n      padding-left: ${insaneSpacing}px;\n    }\n    100% {\n      padding-left: 0px;\n    }\n  }\n\n  @keyframes padding-left-fade-out {\n    0% {\n      padding-left: 0px;\n    }\n    100% {\n      padding-left: ${insaneSpacing}px;\n    }\n  }\n\n  @keyframes padding-right-fade-in {\n    0% {\n      padding-right: ${insaneSpacing}px;\n    }\n    100% {\n      padding-right: 0px;\n    }\n  }\n\n  @keyframes padding-right-fade-out {\n    0% {\n      padding-right: 0px;\n    }\n    100% {\n      padding-right: ${insaneSpacing}px;\n    }\n  }\n\n  @keyframes hero-text-fade-in {\n    0% {\n      opacity: 0;\n      margin-right: ${insaneSpacing}px;\n    }\n    100% {\n      opacity: 1;\n      margin-right: 0px;\n    }\n  }\n\n  @keyframes hero-image-fade-in-to-0-x {\n    0% {\n      background-position-x: -30px;\n    }\n\n    100% {\n      background-position-x: 0px;\n    }\n  }\n\n  @keyframes hero-image-fade-in-to-100-x {\n    0% {\n      background-position-x: -150px;\n    }\n\n    100% {\n      background-position-x: -100px;\n    }\n  }\n\n  @keyframes hero-image-fade-in-to-200-x {\n    0% {\n      background-position-x: -250px;\n    }\n\n    100% { \n      background-position-x: -200px;\n    }\n  }\n`;\n","export const radius: Radiuses = {\n  insane: 48,\n  huge: 40,\n  giant: 32,\n  big: 26,\n  large: 20,\n  medium: 16,\n  short: 12,\n  small: 8,\n  smaller: 4,\n  meaningless: 2,\n};\n\nexport default radius;\n","export const shadows: Shadows = {\n  s1: '0px 4px 80px 2px #00000010',\n  s2: '0px 4px 40px 2px #00000010',\n  s3: '0px 4px 20px 2px #00000010',\n};\n\nexport default shadows;\n","const typographyTheme: TypographyVariantKeysGenericMapper<TypographyAttributes> = {\n  paragraph: {\n    fontSize: 1,\n    fontWeight: 500,\n  },\n  footer: {\n    fontSize: 0.875,\n    fontWeight: 500,\n  },\n  header: {\n    fontSize: 1.25,\n    fontWeight: 500,\n  },\n  headline1: {\n    fontSize: 5,\n    fontWeight: 700,\n  },\n  headline2: {\n    fontSize: 4.5,\n    fontWeight: 700,\n  },\n  headline3: {\n    fontSize: 4,\n    fontWeight: 700,\n  },\n  headline4: {\n    fontSize: 3.5,\n    fontWeight: 700,\n  },\n  headline5: {\n    fontSize: 3,\n    fontWeight: 700,\n  },\n  headline6: {\n    fontSize: 2.5,\n    fontWeight: 700,\n  },\n};\n\nexport default typographyTheme;\n","const zIndex: ZIndexTheme = {\n  layer0: 0,\n  layer1: 5,\n  layer2: 10,\n  layer3: 15,\n  layer4: 20,\n  layer5: 25,\n};\n\nexport default zIndex;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nexport const success = (content: string | JSX.Element | React.FC): void => {\n  toast(content, {\n    type: 'success',\n  });\n};\nexport default success;\n","import React from 'react';\nimport { toast } from 'react-toastify';\n\nexport const error = (content: string | JSX.Element | React.FC): void => {\n  toast(content, {\n    type: 'error',\n  });\n};\nexport default error;\n","import React, { createContext, useState } from 'react';\nimport { ThemeProvider as StyledComponentsThemeProvider } from 'styled-components';\nimport {\n  GlobalStyle,\n  breakpoints,\n  colors,\n  radius,\n  shadows,\n  spacings,\n  typography,\n  zIndex,\n} from '~/utils';\n\ntype ThemeData = {\n  theme: AppTheme;\n  themeChoice: ColorThemeDefaultOptions;\n  handleChangeThemeChoice(choice: ColorThemeDefaultOptions): void;\n};\n\nexport const ThemeContext = createContext<ThemeData>({} as ThemeData);\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n  const [themeChoice, setThemeChoice] = useState<ColorThemeDefaultOptions>(\n    'dark',\n  );\n  const [theme, setTheme] = useState<AppTheme>({\n    breakpoints,\n    colors: colors[themeChoice],\n    radius,\n    spacings,\n    typography,\n    zIndex,\n    shadows,\n  });\n\n  const handleChangeThemeChoice = (choice: ColorThemeDefaultOptions) => {\n    setThemeChoice(choice);\n    setTheme({ ...theme, colors: colors[choice] });\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{ handleChangeThemeChoice, theme, themeChoice }}\n    >\n      <StyledComponentsThemeProvider theme={theme}>\n        <GlobalStyle />\n        {children}\n      </StyledComponentsThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/owm-api-app.76bf8db0.png\";","export default __webpack_public_path__ + \"static/media/sb.aa9db21c.png\";","export default __webpack_public_path__ + \"static/media/solar-dashboard.0af1d623.png\";","export default __webpack_public_path__ + \"static/media/sweet-landing-light.c82d2a07.png\";","export default __webpack_public_path__ + \"static/media/gabao-gradient-full.aeba6758.png\";","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst Apple: FC<SVGIconProps> = ({ color = 'colors.text.main', size = 64 }) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M49.8933 52C47.68 55.3067 45.3333 58.5333 41.76 58.5867C38.1867 58.6667 37.04 56.48 32.9867 56.48C28.9067 56.48 27.6533 58.5333 24.2667 58.6667C20.7733 58.8 18.1333 55.1467 15.8933 51.92C11.3333 45.3333 7.84 33.2 12.5333 25.04C14.8533 20.9867 19.0133 18.4267 23.52 18.3467C26.9333 18.2933 30.1867 20.6667 32.2933 20.6667C34.3733 20.6667 38.32 17.8133 42.4533 18.24C44.1867 18.32 49.04 18.9333 52.16 23.52C51.92 23.68 46.3733 26.9333 46.4267 33.68C46.5067 41.7333 53.4933 44.4267 53.5733 44.4533C53.4933 44.64 52.4533 48.2933 49.8933 52ZM34.6667 9.33333C36.6133 7.12 39.84 5.44 42.5067 5.33333C42.8533 8.45333 41.6 11.6 39.7333 13.84C37.8933 16.1067 34.8533 17.8667 31.8667 17.6267C31.4667 14.56 32.96 11.36 34.6667 9.33333Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Apple;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst Dashboard: FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M34.6667 8V24H56V8M34.6667 56H56V29.3333H34.6667M8 56H29.3333V40H8M8 34.6667H29.3333V8H8V34.6667Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Dashboard;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst Discord: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M53.2953 12.9258C49.3755 11.0918 45.1843 9.75894 40.8025 9C40.2644 9.97293 39.6357 11.2816 39.2022 12.3226C34.5442 11.6221 29.9291 11.6221 25.3567 12.3226C24.9234 11.2816 24.2804 9.97293 23.7374 9C19.3509 9.75894 15.1548 11.0967 11.235 12.9355C3.32877 24.8829 1.18552 36.5335 2.25715 48.0187C7.50099 51.9347 12.5829 54.3135 17.5791 55.8702C18.8126 54.1724 19.9128 52.3677 20.8606 50.4656C19.0555 49.7797 17.3266 48.9333 15.693 47.9507C16.1264 47.6296 16.5504 47.2939 16.9599 46.9485C26.9237 51.6088 37.7495 51.6088 47.5943 46.9485C48.0086 47.2939 48.4325 47.6296 48.8611 47.9507C47.2227 48.9381 45.4891 49.7846 43.684 50.4705C44.6318 52.3677 45.7273 54.1773 46.9656 55.875C51.9665 54.3184 57.0532 51.9396 62.297 48.0187C63.5544 34.7044 60.149 23.1608 53.2953 12.9258ZM22.218 40.9554C19.227 40.9554 16.7741 38.1631 16.7741 34.7628C16.7741 31.3625 19.1746 28.5654 22.218 28.5654C25.2615 28.5654 27.7143 31.3576 27.6619 34.7628C27.6667 38.1631 25.2615 40.9554 22.218 40.9554ZM42.3361 40.9554C39.3451 40.9554 36.8922 38.1631 36.8922 34.7628C36.8922 31.3625 39.2927 28.5654 42.3361 28.5654C45.3795 28.5654 47.8324 31.3576 47.78 34.7628C47.78 38.1631 45.3795 40.9554 42.3361 40.9554Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Discord;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst Facebook: FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M32 5.44C17.3333 5.44 5.33334 17.4133 5.33334 32.16C5.33334 45.4933 15.0933 56.56 27.84 58.56V39.8933H21.0667V32.16H27.84V26.2667C27.84 19.5733 31.8133 15.8933 37.92 15.8933C40.8267 15.8933 43.8667 16.4 43.8667 16.4V22.9867H40.5067C37.2 22.9867 36.16 25.04 36.16 27.1467V32.16H43.5733L42.3733 39.8933H36.16V58.56C42.4439 57.5676 48.1659 54.3614 52.2931 49.5202C56.4204 44.6789 58.6809 38.5217 58.6667 32.16C58.6667 17.4133 46.6667 5.44 32 5.44Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Facebook;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst Github: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M32 5.33337C28.4981 5.33337 25.0305 6.02313 21.7951 7.36325C18.5598 8.70338 15.6201 10.6676 13.1439 13.1439C8.14289 18.1448 5.33337 24.9276 5.33337 32C5.33337 43.7867 12.9867 53.7867 23.5734 57.3334C24.9067 57.5467 25.3334 56.72 25.3334 56C25.3334 55.3867 25.3334 53.7067 25.3334 51.4934C17.9467 53.0934 16.3734 47.92 16.3734 47.92C15.1467 44.8267 13.4134 44 13.4134 44C10.9867 42.3467 13.6 42.4 13.6 42.4C16.2667 42.5867 17.68 45.1467 17.68 45.1467C20 49.2 23.92 48 25.44 47.36C25.68 45.6267 26.3734 44.4534 27.12 43.7867C21.2 43.12 14.9867 40.8267 14.9867 30.6667C14.9867 27.7067 16 25.3334 17.7334 23.44C17.4667 22.7734 16.5334 20 18 16.4C18 16.4 20.24 15.68 25.3334 19.12C27.44 18.5334 29.7334 18.24 32 18.24C34.2667 18.24 36.56 18.5334 38.6667 19.12C43.76 15.68 46 16.4 46 16.4C47.4667 20 46.5334 22.7734 46.2667 23.44C48 25.3334 49.0134 27.7067 49.0134 30.6667C49.0134 40.8534 42.7734 43.0934 36.8267 43.76C37.7867 44.5867 38.6667 46.2134 38.6667 48.6934C38.6667 52.2667 38.6667 55.1467 38.6667 56C38.6667 56.72 39.0934 57.5734 40.4534 57.3334C51.04 53.76 58.6667 43.7867 58.6667 32C58.6667 28.4981 57.977 25.0305 56.6368 21.7951C55.2967 18.5598 53.3324 15.6201 50.8562 13.1439C48.38 10.6676 45.4403 8.70338 42.2049 7.36325C38.9696 6.02313 35.502 5.33337 32 5.33337Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Github;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst GMail: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M53.3334 48H48V24.6667L32 34.6667L16 24.6667V48H10.6667V16H13.8667L32 27.3334L50.1334 16H53.3334M53.3334 10.6667H10.6667C7.70671 10.6667 5.33337 13.04 5.33337 16V48C5.33337 49.4145 5.89528 50.7711 6.89547 51.7713C7.89566 52.7715 9.25222 53.3334 10.6667 53.3334H53.3334C54.7479 53.3334 56.1044 52.7715 57.1046 51.7713C58.1048 50.7711 58.6667 49.4145 58.6667 48V16C58.6667 13.04 56.2667 10.6667 53.3334 10.6667Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default GMail;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst Google: FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M57.4333 30.1H32.98V37.38H50.34C49.46 47.54 41.0067 51.8867 33.0067 51.8867C22.7933 51.8867 13.8333 43.8333 13.8333 32.5C13.8333 21.5667 22.3667 13.1133 33.0333 13.1133C41.2733 13.1133 46.1 18.3667 46.1 18.3667L51.1667 13.0867C51.1667 13.0867 44.66 5.83333 32.7667 5.83333C17.62 5.83333 5.91333 18.6333 5.91333 32.5C5.91333 45.9667 16.9267 59.1667 33.1667 59.1667C47.4333 59.1667 57.8333 49.38 57.8333 34.9267C57.8333 31.86 57.4333 30.1 57.4333 30.1Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Google;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst Instagram: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M20.8 5.33331H43.2C51.7334 5.33331 58.6667 12.2666 58.6667 20.8V43.2C58.6667 47.302 57.0372 51.236 54.1366 54.1366C51.2361 57.0371 47.3021 58.6666 43.2 58.6666H20.8C12.2667 58.6666 5.33337 51.7333 5.33337 43.2V20.8C5.33337 16.698 6.96289 12.764 9.86346 9.86339C12.764 6.96283 16.698 5.33331 20.8 5.33331ZM20.2667 10.6666C17.7206 10.6666 15.2788 11.6781 13.4785 13.4784C11.6781 15.2788 10.6667 17.7206 10.6667 20.2666V43.7333C10.6667 49.04 14.96 53.3333 20.2667 53.3333H43.7334C46.2794 53.3333 48.7212 52.3219 50.5216 50.5215C52.3219 48.7212 53.3334 46.2794 53.3334 43.7333V20.2666C53.3334 14.96 49.04 10.6666 43.7334 10.6666H20.2667ZM46 14.6666C46.8841 14.6666 47.7319 15.0178 48.3571 15.643C48.9822 16.2681 49.3334 17.1159 49.3334 18C49.3334 18.884 48.9822 19.7319 48.3571 20.357C47.7319 20.9821 46.8841 21.3333 46 21.3333C45.116 21.3333 44.2681 20.9821 43.643 20.357C43.0179 19.7319 42.6667 18.884 42.6667 18C42.6667 17.1159 43.0179 16.2681 43.643 15.643C44.2681 15.0178 45.116 14.6666 46 14.6666ZM32 18.6666C35.5363 18.6666 38.9276 20.0714 41.4281 22.5719C43.9286 25.0724 45.3334 28.4638 45.3334 32C45.3334 35.5362 43.9286 38.9276 41.4281 41.4281C38.9276 43.9286 35.5363 45.3333 32 45.3333C28.4638 45.3333 25.0724 43.9286 22.5719 41.4281C20.0715 38.9276 18.6667 35.5362 18.6667 32C18.6667 28.4638 20.0715 25.0724 22.5719 22.5719C25.0724 20.0714 28.4638 18.6666 32 18.6666ZM32 24C29.8783 24 27.8435 24.8428 26.3432 26.3431C24.8429 27.8434 24 29.8782 24 32C24 34.1217 24.8429 36.1565 26.3432 37.6568C27.8435 39.1571 29.8783 40 32 40C34.1218 40 36.1566 39.1571 37.6569 37.6568C39.1572 36.1565 40 34.1217 40 32C40 29.8782 39.1572 27.8434 37.6569 26.3431C36.1566 24.8428 34.1218 24 32 24Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Instagram;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst LinkedIn: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M50.6667 8C52.0812 8 53.4377 8.5619 54.4379 9.5621C55.4381 10.5623 56 11.9188 56 13.3333V50.6667C56 52.0812 55.4381 53.4377 54.4379 54.4379C53.4377 55.4381 52.0812 56 50.6667 56H13.3333C11.9188 56 10.5623 55.4381 9.5621 54.4379C8.5619 53.4377 8 52.0812 8 50.6667V13.3333C8 11.9188 8.5619 10.5623 9.5621 9.5621C10.5623 8.5619 11.9188 8 13.3333 8H50.6667ZM49.3333 49.3333V35.2C49.3333 32.8944 48.4174 30.6832 46.7871 29.0529C45.1568 27.4226 42.9456 26.5067 40.64 26.5067C38.3733 26.5067 35.7333 27.8933 34.4533 29.9733V27.0133H27.0133V49.3333H34.4533V36.1867C34.4533 34.1333 36.1067 32.4533 38.16 32.4533C39.1501 32.4533 40.0997 32.8467 40.7999 33.5468C41.5 34.2469 41.8933 35.1965 41.8933 36.1867V49.3333H49.3333ZM18.3467 22.8267C19.5348 22.8267 20.6743 22.3547 21.5145 21.5145C22.3547 20.6743 22.8267 19.5348 22.8267 18.3467C22.8267 15.8667 20.8267 13.84 18.3467 13.84C17.1514 13.84 16.0051 14.3148 15.16 15.16C14.3148 16.0051 13.84 17.1514 13.84 18.3467C13.84 20.8267 15.8667 22.8267 18.3467 22.8267ZM22.0533 49.3333V27.0133H14.6667V49.3333H22.0533Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default LinkedIn;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst ListStatus: FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M44 29.3334L34.6666 20L38.4 16.2667L44 21.8667L55.2 10.6667L58.9333 14.4L44 29.3334ZM29.3333 18.6667H5.33331V24H29.3333V18.6667ZM56 35.7334L52.2666 32L45.3333 38.9334L38.4 32L34.6666 35.7334L41.6 42.6667L34.6666 49.6L38.4 53.3334L45.3333 46.4L52.2666 53.3334L56 49.6L49.0666 42.6667L56 35.7334ZM29.3333 40H5.33331V45.3334H29.3333V40Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default ListStatus;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React from 'react';\nimport { Path } from './styles';\n\nconst Medium: React.FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M10.5721 18.9759C10.641 18.2955 10.3815 17.6231 9.8735 17.1652L4.69861 10.9312V10H20.7666L33.1864 37.2381L44.1054 10H59.4231V10.9312L54.9985 15.1734C54.6171 15.4642 54.4279 15.9421 54.5069 16.415V47.5849C54.4279 48.0579 54.6171 48.5358 54.9985 48.8266L59.3196 53.0688V54H37.585V53.0688L42.0613 48.7231C42.5012 48.2834 42.5012 48.154 42.5012 47.4815V22.2869L30.0556 53.8965H28.3737L13.884 22.2869V43.4721C13.7632 44.3628 14.059 45.2595 14.6861 45.9036L20.5079 52.9653V53.8965H4V52.9653L9.82175 45.9036C10.4443 45.2584 10.7229 44.3557 10.5721 43.4721V18.9759Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default Medium;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst Menu: FC<SVGIconProps> = ({ color = 'colors.text.main', size = 64 }) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M8 16H56V21.3333H8V16ZM8 29.3333H56V34.6667H8V29.3333ZM8 42.6667H56V48H8V42.6667Z\"\n      fill={color}\n    />\n  </svg>\n);\n\nexport default Menu;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype PathProps = {\n  fillColor?: ColorThemeKeys;\n};\n\nconst handleFillColor = ({ fillColor = 'colors.primary.main' }: PathProps) =>\n  getThemeByPath(fillColor);\n\nexport const Path = styled.path<PathProps>`\n  fill: ${handleFillColor};\n`;\n","import React, { FC } from 'react';\nimport { Path } from './styles';\n\nconst NoteEdit: FC<SVGIconProps> = ({\n  color = 'colors.text.main',\n  size = 64,\n}) => (\n  <svg width={size} height={size} viewBox=\"0 0 64 64\" fill=\"none\">\n    <Path\n      d=\"M56 26.6667V24L40 8H13.3333C10.3733 8 8 10.3733 8 13.3333V50.6667C8 53.6267 10.4 56 13.3333 56H29.3333V51.0133L51.7067 28.64C52.88 27.4667 54.3733 26.8267 56 26.6667ZM37.3333 12L52 26.6667H37.3333V12ZM60.9333 37.84L58.32 40.4533L52.88 35.0133L55.4933 32.4C56 31.8667 56.88 31.8667 57.4133 32.4L60.9333 35.92C61.4667 36.4533 61.4667 37.3333 60.9333 37.84ZM51.0133 36.88L56.4533 42.32L40.1067 58.6667H34.6667V53.2267L51.0133 36.88Z\"\n      fillColor={color}\n    />\n  </svg>\n);\n\nexport default NoteEdit;\n","import React from 'react';\nimport Apple from './apple';\nimport Dashboard from './dashboard';\nimport Discord from './discord';\nimport Facebook from './facebook';\nimport Github from './github';\nimport GMail from './gmail';\nimport Google from './google';\nimport Instagram from './instagram';\nimport LinkedIn from './linkedIn';\nimport ListStatus from './listStatus';\nimport Medium from './medium';\nimport Menu from './menu';\nimport NoteEdit from './noteEdit';\n\nconst SVGIcons: SVGIconKeysGenericMapper<\n  (props?: SVGIconProps) => React.ReactNode\n> = {\n  apple: (props?: SVGIconProps) => <Apple {...props} />,\n  google: (props?: SVGIconProps) => <Google {...props} />,\n  facebook: (props?: SVGIconProps) => <Facebook {...props} />,\n  menu: (props?: SVGIconProps) => <Menu {...props} />,\n  dashboard: (props?: SVGIconProps) => <Dashboard {...props} />,\n  listStatus: (props?: SVGIconProps) => <ListStatus {...props} />,\n  noteEdit: (props?: SVGIconProps) => <NoteEdit {...props} />,\n  discord: (props?: SVGIconProps) => <Discord {...props} />,\n  gmail: (props?: SVGIconProps) => <GMail {...props} />,\n  instagram: (props?: SVGIconProps) => <Instagram {...props} />,\n  linkedIn: (props?: SVGIconProps) => <LinkedIn {...props} />,\n  medium: (props?: SVGIconProps) => <Medium {...props} />,\n  github: (props?: SVGIconProps) => <Github {...props} />,\n};\n\nexport default SVGIcons;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\n/**\n * Didn't want to use it, but spotted some weird behavior on ios's safari when the background color\n * is set to invisible...\n */\nconst defaultMinHeight = 16;\n\nconst typographyFontSize = ({ theme, variant }: BaseInputProps) =>\n  getThemeByPath(`typography.${variant}.fontSize` as AppThemeKeys)({ theme });\n\nconst typographyFontWeight = ({ theme, variant }: BaseInputProps) =>\n  getThemeByPath(`typography.${variant}.fontWeight` as AppThemeKeys)({ theme });\n\nconst handleTextColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: BaseInputProps) => getThemeByPath(textColor)({ theme });\n\nconst handlePlaceholderColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: BaseInputProps) => `${getThemeByPath(textColor)({ theme })}88`;\n\nexport const BaseInput = styled.input<BaseInputProps>`\n  background-color: #0000;\n  min-height: ${defaultMinHeight}px;\n  width: 100%;\n  font-weight: ${typographyFontWeight};\n  font-size: ${typographyFontSize}rem;\n  color: ${handleTextColor};\n  text-align: left;\n\n  &::placeholder {\n    font-weight: ${typographyFontWeight};\n    font-size: ${typographyFontSize}rem;\n    color: ${handlePlaceholderColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\n/**\n * Didn't want to use it, but spotted some weird behavior on ios's safari when the background color\n * is set to invisible...\n */\nconst defaultMinHeight = 16;\n\nconst typographyFontSize = ({ theme, variant }: BaseInputProps) =>\n  getThemeByPath(`typography.${variant}.fontSize` as AppThemeKeys)({ theme });\n\nconst typographyFontWeight = ({ theme, variant }: BaseInputProps) =>\n  getThemeByPath(`typography.${variant}.fontWeight` as AppThemeKeys)({ theme });\n\nconst handleTextColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: BaseInputProps) => getThemeByPath(textColor)({ theme });\n\nconst handlePlaceholderColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: BaseInputProps) => `${getThemeByPath(textColor)({ theme })}88`;\n\nexport const BaseInput = styled.input<BaseInputProps>`\n  background-color: #0000;\n  min-height: ${defaultMinHeight}px;\n  width: 100%;\n  font-weight: ${typographyFontWeight};\n  font-size: ${typographyFontSize}rem;\n  color: ${handleTextColor};\n  text-align: left;\n\n  &::placeholder {\n    font-weight: ${typographyFontWeight};\n    font-size: ${typographyFontSize}rem;\n    color: ${handlePlaceholderColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst environmentDarker = getThemeByPath('colors.environment.darker');\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background-color: ${environmentDarker};\n  overflow-x: hidden;\n`;\n","import styled, { DefaultTheme } from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\ntype TextProps = {\n  textColor: ColorThemeKeys;\n  theme: DefaultTheme;\n  textAlign?: TypographyAlignKeys;\n};\n\nconst textColor = (props: TextProps) => getThemeByPath(props.textColor)(props);\n\nconst textAlign = ({ textAlign = 'left' }: TextProps) => textAlign;\n\nconst paragraphFontSize = getThemeByPath('typography.paragraph.fontSize');\nconst paragraphFontWeight = getThemeByPath('typography.paragraph.fontWeight');\n\nconst headline1FontSize = getThemeByPath('typography.headline1.fontSize');\nconst headline1FontWeight = getThemeByPath('typography.headline1.fontWeight');\n\nconst headline2FontSize = getThemeByPath('typography.headline2.fontSize');\nconst headline2FontWeight = getThemeByPath('typography.headline2.fontWeight');\n\nconst headline3FontSize = getThemeByPath('typography.headline3.fontSize');\nconst headline3FontWeight = getThemeByPath('typography.headline3.fontWeight');\n\nconst headline4FontSize = getThemeByPath('typography.headline4.fontSize');\nconst headline4FontWeight = getThemeByPath('typography.headline4.fontWeight');\n\nconst headline5FontSize = getThemeByPath('typography.headline5.fontSize');\nconst headline5FontWeight = getThemeByPath('typography.headline5.fontWeight');\n\nconst headline6FontSize = getThemeByPath('typography.headline6.fontSize');\nconst headline6FontWeight = getThemeByPath('typography.headline6.fontWeight');\n\nconst headerFontSize = getThemeByPath('typography.header.fontSize');\nconst headerFontWeight = getThemeByPath('typography.header.fontWeight');\n\nconst footerFontSize = getThemeByPath('typography.footer.fontSize');\nconst footerFontWeight = getThemeByPath('typography.footer.fontWeight');\n\nexport const Paragraph = styled.p<TextProps>`\n  color: ${textColor};\n  font-size: ${paragraphFontSize}rem;\n  font-weight: ${paragraphFontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline1 = styled.h1<TextProps>`\n  color: ${textColor};\n  font-size: ${headline1FontSize}rem;\n  font-weight: ${headline1FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline2 = styled.h2<TextProps>`\n  color: ${textColor};\n  font-size: ${headline2FontSize}rem;\n  font-weight: ${headline2FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline3 = styled.h3<TextProps>`\n  color: ${textColor};\n  font-size: ${headline3FontSize}rem;\n  font-weight: ${headline3FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline4 = styled.h4<TextProps>`\n  color: ${textColor};\n  font-size: ${headline4FontSize}rem;\n  font-weight: ${headline4FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline5 = styled.h5<TextProps>`\n  color: ${textColor};\n  font-size: ${headline5FontSize}rem;\n  font-weight: ${headline5FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Headline6 = styled.h6<TextProps>`\n  color: ${textColor};\n  font-size: ${headline6FontSize}rem;\n  font-weight: ${headline6FontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Header = styled.p<TextProps>`\n  color: ${textColor};\n  font-size: ${headerFontSize}rem;\n  font-weight: ${headerFontWeight};\n  text-align: ${textAlign};\n`;\n\nexport const Footer = styled.p<TextProps>`\n  color: ${textColor};\n  font-size: ${footerFontSize}rem;\n  font-weight: ${footerFontWeight};\n  text-align: ${textAlign};\n`;\n","import React, { FC } from 'react';\nimport {\n  Footer,\n  Header,\n  Headline1,\n  Headline2,\n  Headline3,\n  Headline4,\n  Headline5,\n  Headline6,\n  Paragraph,\n} from './styles';\n\ntype Props = {\n  typographyProps?: React.HtmlHTMLAttributes<HTMLParagraphElement>;\n  variant?: TypographyVariantKeys;\n  textColor?: ColorThemeKeys;\n  typographyAlign?: TypographyAlignKeys;\n};\n\nconst Typography: FC<Props> = ({\n  children,\n  typographyProps,\n  variant = 'paragraph',\n  textColor = 'colors.text.main',\n  typographyAlign,\n}) => {\n  const typographyComponents: TypographyVariantKeysGenericMapper<JSX.Element> = {\n    paragraph: (\n      <Paragraph\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Paragraph>\n    ),\n    headline1: (\n      <Headline1\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline1>\n    ),\n    headline2: (\n      <Headline2\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline2>\n    ),\n    headline3: (\n      <Headline3\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline3>\n    ),\n    headline4: (\n      <Headline4\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline4>\n    ),\n    headline5: (\n      <Headline5\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline5>\n    ),\n    headline6: (\n      <Headline6\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Headline6>\n    ),\n    footer: (\n      <Footer\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Footer>\n    ),\n    header: (\n      <Header\n        textColor={textColor}\n        textAlign={typographyAlign}\n        {...typographyProps}\n      >\n        {children}\n      </Header>\n    ),\n  };\n\n  return typographyComponents[variant];\n};\n\nexport default Typography;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\nimport Typography from '../Typography';\n\ntype GenericProps = {\n  active?: boolean;\n};\n\nconst spacingMedium = getThemeByPath('spacings.medium');\nconst spacingSmall = getThemeByPath('spacings.small');\nconst environmentNeutral1 = getThemeByPath('colors.environment.neutral1');\nconst environemntMain = getThemeByPath('colors.environment.main');\nconst smallRadius = getThemeByPath('radius.small');\n\nexport const ItemMenu = styled.button<GenericProps>`\n  display: flex;\n  align-items: center;\n  padding: ${spacingMedium}px;\n  margin: ${spacingSmall}px;\n  border-radius: ${smallRadius}px;\n  background-color: ${props =>\n    props.active ? environmentNeutral1(props) : environemntMain(props)};\n\n  transition: 0.2s;\n  &:hover {\n    cursor: pointer;\n    background-color: ${environmentNeutral1};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  margin-right: ${spacingSmall}px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const MenuText = styled(Typography).attrs({\n  textColor: 'colors.primary.main',\n})``;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst defaultGlassBlur = 3;\nconst shadowS2 = getThemeByPath('shadows.s2');\nconst environmentDarker = getThemeByPath('colors.environment.darker');\n\nexport const Wrapper = styled.div`\n  background: ${environmentDarker}AA;\n  box-shadow: ${shadowS2};\n  backdrop-filter: blur(${defaultGlassBlur}px);\n  -webkit-backdrop-filter: blur(${defaultGlassBlur}px);\n`;\n","import styled from 'styled-components';\n\ntype InnerImageProps = {\n  src?: string;\n};\n\nconst handleImgBckURL = ({ src }: InnerImageProps) =>\n  `url(${String(src || '')})`;\n\nexport const InnerImage = styled.div<InnerImageProps>`\n  display: flex;\n  flex: 1;\n  background-image: ${handleImgBckURL};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  height: 100%;\n`;\n","import React, { FC } from 'react';\nimport { InnerImage } from './styles';\n\ntype Props = {\n  src?: string;\n};\n\nconst ImageBck: FC<Props> = ({ src, ...rest }) => (\n  <InnerImage src={src} {...rest} />\n);\n\nexport default ImageBck;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst environmentDarker = getThemeByPath('colors.environment.darker');\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  overflow-x: hidden;\n  background-color: ${environmentDarker};\n\n  background: rgb(41, 0, 48);\n  background: linear-gradient(\n    140deg,\n    rgba(41, 0, 48, 1) 0%,\n    rgba(13, 13, 13, 1) 100%\n  );\n`;\n","import React, { FC } from 'react';\nimport { Wrapper } from './styles';\n\nconst PageWrapper: FC = ({ children, ...rest }) => {\n  return <Wrapper {...rest}>{children}</Wrapper>;\n};\n\nexport default PageWrapper;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst environmentMain = getThemeByPath('colors.environment.main');\nconst radiusShort = getThemeByPath('radius.short');\nconst shadowS1 = getThemeByPath('shadows.s1');\nconst zIndexLayer1 = getThemeByPath('zIndex.layer1');\n\nexport const Wrapper = styled.div`\n  box-shadow: ${shadowS1};\n  border-radius: ${radiusShort}px;\n  overflow: hidden;\n`;\n\nexport const ChildrenWrapper = styled.div`\n  position: relative;\n  border-radius: ${radiusShort}px;\n  background-color: ${environmentMain};\n  z-index: ${zIndexLayer1};\n`;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\nimport Typography from '../Typography';\n\ntype CellProps = {\n  cellStatus: StepStatus;\n  theme: AppTheme;\n};\n\nconst defaultStepWidth = 120;\nconst defaultLineHeight = 4;\n\nconst primaryMain = getThemeByPath('colors.primary.main');\nconst textDisabled = getThemeByPath('colors.text.disabled');\nconst smallSpacing = getThemeByPath('spacings.small');\nconst mediumSpacing = getThemeByPath('spacings.medium');\n\nconst textColorByStatus: StepStatusGenericMapper<ColorThemeKeys> = {\n  active: 'colors.primary.main',\n  reached: 'colors.text.main',\n  unreached: 'colors.text.disabled',\n};\n\nconst lineColorByStatus: StepStatusGenericMapper<\n  (props: CellProps) => string\n> = {\n  active: primaryMain,\n  reached: primaryMain,\n  unreached: textDisabled,\n};\n\nconst handleTextColor = ({ cellStatus }: CellProps) => {\n  return textColorByStatus[cellStatus];\n};\n\nconst handleLineColor = ({ cellStatus }: CellProps) => {\n  return lineColorByStatus[cellStatus];\n};\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const StepWrapper = styled.div`\n  min-width: ${defaultStepWidth}px;\n  display: flex;\n  flex-direction: column;\n  margin-right: ${mediumSpacing}px;\n`;\n\nexport const LabelWrapper = styled.div``;\n\nexport const LabelText = styled(Typography).attrs<CellProps>(props => ({\n  textColor: handleTextColor(props),\n}))<CellProps>``;\n\nexport const Line = styled.div<CellProps>`\n  margin-top: ${smallSpacing}px;\n  background-color: ${handleLineColor};\n  height: ${defaultLineHeight}px;\n  width: 100%;\n`;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\nconst primaryMain = getThemeByPath('colors.primary.main');\nconst smallRadius = getThemeByPath('radius.small');\nconst shortSpacing = getThemeByPath('spacings.short');\n\nexport const Wrapper = styled.button`\n  display: flex;\n  border: solid 2px ${primaryMain};\n  border-radius: ${smallRadius}px;\n  padding: ${shortSpacing}px;\n  background-color: ${primaryMain};\n\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  margin-right: ${shortSpacing}px;\n`;\n\nexport const Label = styled(Typography).attrs({\n  textColor: 'colors.primary.textContrast',\n})``;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\n\nexport const Anchor = styled.a`\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Text = styled(Typography)``;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\nconst defaultBtnWidth = 200;\nconst defaultBtnWidthMobile = 120;\n\nconst textMain = getThemeByPath('colors.text.main');\n\nconst radiusMedium = getThemeByPath('radius.medium');\n\nconst spacingShort = getThemeByPath('spacings.short');\n\nconst bkpTablet = getThemeByPath('breakpoints.tablet');\n\nexport const ButtonIconWrapper = styled.a`\n  width: ${defaultBtnWidth}px;\n  display: flex;\n  height: fit-content;\n  flex-direction: column;\n  align-items: center;\n  border-radius: ${radiusMedium}px;\n  border: solid 2px ${textMain};\n  padding: ${spacingShort}px;\n  text-decoration: none;\n\n  @media (max-width: ${bkpTablet}px) {\n    width: ${defaultBtnWidthMobile}px;\n  }\n\n  @keyframes pulse-border {\n    0% {\n      border-color: ${textMain};\n    }\n\n    50% {\n      border-color: #0000;\n    }\n\n    100% {\n      border-color: ${textMain};\n    }\n  }\n\n  &:hover {\n    animation: pulse-border;\n    animation-duration: 1500ms;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const ButtonTextWrapper = styled.div``;\n\nexport const ButtonIconText = styled(Typography).attrs({\n  variant: 'header',\n  textColor: 'colors.text.main',\n  typographyProps: {\n    style: {\n      fontWeight: 500,\n    },\n  },\n})``;\n\nexport const IconWrapper = styled.div`\n  margin-top: ${spacingShort}px;\n`;\n","import React from 'react';\nimport { SVGIcons } from '~/assets';\nimport {\n  ButtonIconText,\n  ButtonIconWrapper,\n  ButtonTextWrapper,\n  IconWrapper,\n} from './styles';\n\ntype Props = {\n  btnText?: string;\n  textColor?: string;\n  icon?: SVGIconKeys;\n  iconProps?: SVGIconProps;\n  iconColor?: string;\n  onClick?: () => void;\n  href?: string;\n  preventDefaultOnClick?: boolean;\n};\n\nconst ButtonIcon: React.FC<Props> = ({\n  btnText = 'Tradicionais',\n  icon = 'google',\n  iconProps,\n  href = '',\n  onClick,\n  preventDefaultOnClick = false,\n}) => {\n  const handleClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (preventDefaultOnClick) e.preventDefault();\n\n    if (onClick) onClick();\n  };\n\n  return (\n    <ButtonIconWrapper onClick={handleClick} href={href}>\n      <ButtonTextWrapper>\n        <ButtonIconText>{btnText}</ButtonIconText>\n      </ButtonTextWrapper>\n      <IconWrapper>{SVGIcons[icon](iconProps)}</IconWrapper>\n    </ButtonIconWrapper>\n  );\n};\n\nexport default ButtonIcon;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst smallSpacing = getThemeByPath('spacings.small');\nconst breakpointTablet = getThemeByPath('breakpoints.tablet');\nconst mediumRadius = getThemeByPath('radius.medium');\nconst textMain = getThemeByPath('colors.text.main');\n\nexport const Anchor = styled.a`\n  text-decoration: none;\n  width: 400px;\n  border-radius: ${mediumRadius}px;\n  border: 2px solid ${textMain};\n  overflow: hidden;\n\n  transition: 300ms;\n\n  @media (max-width: ${breakpointTablet}px) {\n    width: 100%;\n  }\n\n  @keyframes pulse-border {\n    0% {\n      border-color: ${textMain};\n    }\n\n    50% {\n      border-color: #0000;\n    }\n\n    100% {\n      border-color: ${textMain};\n    }\n  }\n\n  &:hover {\n    animation: pulse-border;\n    animation-duration: 1500ms;\n    animation-iteration-count: infinite;\n  }\n`;\n\nexport const InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: ${smallSpacing}px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  margin-top: ${smallSpacing}px;\n`;\n\nexport const SubtitleWrapper = styled.div`\n  margin-top: ${smallSpacing}px;\n`;\n\nexport const TechsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\n\nexport const TechItemWrapper = styled.div``;\n\nexport const TechBadge = styled.img`\n  margin-top: ${smallSpacing}px;\n`;\n","import React from 'react';\nimport { ImageBck, Typography } from '~/components/Atoms';\nimport {\n  Anchor,\n  DescriptionWrapper,\n  ImageWrapper,\n  InnerWrapper,\n  SubtitleWrapper,\n  TechBadge,\n  TechItemWrapper,\n  TechsWrapper,\n  TextWrapper,\n} from './styles';\n\nconst Card: React.FC<Example> = ({\n  imageSrc = 'https://cdn.pixabay.com/photo/2012/08/27/14/19/mountains-55067_640.png',\n  description = 'Some longer text here and, well... you know... lots of words that may contain sense or even not, just a bunch of words...',\n  title = 'Some title',\n  href = 'https://main--dancing-torte-fe54b0.netlify.app/',\n  techs = [],\n}) => (\n  <Anchor href={href}>\n    <InnerWrapper>\n      <ImageWrapper>\n        <ImageBck src={imageSrc} />\n      </ImageWrapper>\n      <TextWrapper>\n        <Typography variant=\"header\">{title}</Typography>\n        <DescriptionWrapper>\n          <Typography variant=\"paragraph\">{description}</Typography>\n        </DescriptionWrapper>\n        <SubtitleWrapper>\n          <Typography variant=\"header\">Technologies</Typography>\n        </SubtitleWrapper>\n        <DescriptionWrapper>\n          <TechsWrapper>\n            {techs.map(badge => (\n              <TechItemWrapper>\n                <TechBadge alt=\"Technology Badge\" src={badge} />\n              </TechItemWrapper>\n            ))}\n          </TechsWrapper>\n        </DescriptionWrapper>\n      </TextWrapper>\n    </InnerWrapper>\n  </Anchor>\n);\n\nexport default Card;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\nconst primaryMain = getThemeByPath('colors.primary.main');\nconst smallRadius = getThemeByPath('radius.small');\nconst shortSpacing = getThemeByPath('spacings.short');\n\nexport const Wrapper = styled.div``;\n\nexport const LabelWrapper = styled.div`\n  margin-bottom: ${shortSpacing}px;\n`;\n\nexport const Label = styled(Typography)``;\n\nexport const InputWrapper = styled.div`\n  border: solid 2px ${primaryMain};\n  border-radius: ${smallRadius}px;\n  padding: ${shortSpacing}px;\n`;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\ntype LineProps = {\n  lineColor?: ColorThemeKeys;\n  theme: AppTheme;\n};\n\nconst lineColor = ({ theme, lineColor = 'colors.primary.main' }: LineProps) =>\n  getThemeByPath(lineColor)({ theme });\n\nconst smallSpacing = getThemeByPath('spacings.small');\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextWrapper = styled.div`\n  margin: 0 ${smallSpacing}px;\n`;\n\nexport const Text = styled(Typography)``;\n\nexport const Line = styled.div<LineProps>`\n  width: 100%;\n  height: 1px;\n  background-color: ${lineColor};\n`;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\nconst mediumSpacing = getThemeByPath('spacings.medium');\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: ${mediumSpacing}px;\n`;\n\nexport const Title = styled(Typography)``;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\ntype SelectBaseProps = {\n  textVariant?: TypographyVariantKeys;\n  textColor?: ColorThemeKeys;\n  theme: AppTheme;\n};\n\nconst primaryMain = getThemeByPath('colors.primary.main');\nconst smallRadius = getThemeByPath('radius.small');\nconst shortSpacing = getThemeByPath('spacings.short');\n\nconst typographyFontSize = ({ theme, textVariant }: SelectBaseProps) =>\n  getThemeByPath(`typography.${textVariant}.fontSize` as AppThemeKeys)({\n    theme,\n  });\n\nconst typographyFontWeight = ({ theme, textVariant }: SelectBaseProps) =>\n  getThemeByPath(`typography.${textVariant}.fontWeight` as AppThemeKeys)({\n    theme,\n  });\n\nconst handleTextColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: SelectBaseProps) => getThemeByPath(textColor)({ theme });\n\nconst handlePlaceholderColor = ({\n  theme,\n  textColor = 'colors.primary.main',\n}: SelectBaseProps) => `${getThemeByPath(textColor)({ theme })}88`;\n\nexport const Wrapper = styled.div``;\n\nexport const SelectBase = styled.select<SelectBaseProps>`\n  width: 100%;\n  color: ${handleTextColor};\n\n  font-weight: ${typographyFontWeight};\n  font-size: ${typographyFontSize}rem;\n\n  &::placeholder {\n    font-weight: ${typographyFontWeight};\n    font-size: ${typographyFontSize}rem;\n    color: ${handlePlaceholderColor};\n  }\n`;\n\nexport const OptionBase = styled.option``;\n\nexport const SelectBaseWrapper = styled.div`\n  border: solid 2px ${primaryMain};\n  border-radius: ${smallRadius}px;\n  padding: ${shortSpacing}px;\n`;\n\nexport const LabelWrapper = styled.div`\n  margin-bottom: ${shortSpacing}px;\n`;\n\nexport const Label = styled(Typography)``;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst environemntMain = getThemeByPath('colors.environment.main');\nconst spacingMedium = getThemeByPath('spacings.medium');\nconst spacingSmall = getThemeByPath('spacings.small');\nconst environmentNeutral1 = getThemeByPath('colors.text.main');\nconst smallRadius = getThemeByPath('radius.small');\nconst breakpointTablet = getThemeByPath('breakpoints.tablet');\nconst zIndexLayer2 = getThemeByPath('zIndex.layer2');\n\nconst defaultWrapperWidth = 280;\n\ntype WrapperProps = {\n  isShowing?: boolean;\n};\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  flex-direction: column;\n  min-width: ${defaultWrapperWidth}px;\n  background-color: ${environemntMain};\n  border-right: 2px solid ${environmentNeutral1};\n  padding: ${spacingSmall}px;\n\n  @media (max-width: ${breakpointTablet}px) {\n    position: absolute;\n    display: ${({ isShowing }) => (isShowing ? 'flex' : 'none')};\n    width: 100%;\n    height: 100vh;\n    z-index: ${zIndexLayer2};\n  }\n`;\n\nexport const ItemMenu = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${spacingMedium}px;\n  margin: ${spacingSmall}px;\n  border-radius: ${smallRadius}px;\n\n  transition: 0.2s;\n  &:hover {\n    cursor: pointer;\n    background-color: ${environmentNeutral1};\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 200px;\n  border-bottom: 2px solid ${environmentNeutral1};\n  padding-bottom: ${spacingSmall}px;\n`;\n\nexport const MenuOptionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nexport const HideMenuWrapper = styled.div`\n  display: none;\n  justify-content: center;\n  background-color: ${environmentNeutral1};\n  border-radius: ${smallRadius}px;\n\n  @media (max-width: ${breakpointTablet}px) {\n    display: flex;\n  }\n`;\n","import styled from 'styled-components';\nimport { Typography } from '~/components/Atoms';\nimport { getThemeByPath } from '~/utils';\n\ntype WrapperProps = {\n  theme: AppTheme;\n  headerColor?: ColorThemeKeys;\n};\n\nconst defaultHeaderHeight = 80;\n\nconst mediumSpacing = getThemeByPath('spacings.medium');\nconst breakpointTablet = getThemeByPath('breakpoints.tablet');\n\nconst handleBackgroundColorWrapper = ({\n  theme,\n  headerColor = 'colors.environment.darker',\n}: WrapperProps) => getThemeByPath(headerColor)({ theme });\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: ${defaultHeaderHeight}px;\n  padding: ${mediumSpacing}px;\n  background-color: ${handleBackgroundColorWrapper};\n`;\n\nexport const PressableWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Pressable = styled.button`\n  display: none;\n\n  @media (max-width: ${breakpointTablet}px) {\n    display: flex;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const IconWrapper = styled.div``;\n\nexport const CurrentSceneText = styled(Typography).attrs({\n  variant: 'headline3',\n})``;\n","import styled from 'styled-components';\nimport { GabaoGradientFull } from '~/assets';\nimport { getThemeByPath } from '~/utils';\n\nconst mediumSpacing = getThemeByPath('spacings.medium');\nconst mediumRadius = getThemeByPath('radius.medium');\nconst bigSpacing = getThemeByPath('spacings.big');\nconst smallSpacing = getThemeByPath('spacings.small');\nconst breakpointTablet = getThemeByPath('breakpoints.tablet');\nconst breakpointLaptop = getThemeByPath('breakpoints.laptop');\nconst breakpointLargeLaptop = getThemeByPath('breakpoints.largeLaptop');\nconst breakpointFhd = getThemeByPath('breakpoints.fhd');\n\nconst defaultAvatarSize = 100;\nconst defaultAvatarRadius = defaultAvatarSize / 2;\nconst defaultTextMarginTop = 96;\n\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nexport const HeroWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  padding-right: 200px;\n\n  background: url(${GabaoGradientFull}) no-repeat;\n  background-size: contain;\n  background-position-x: 0px;\n\n  animation-name: hero-image-fade-in-to-0-x;\n  animation-duration: 2000ms;\n  animation-fill-mode: forwards;\n\n  @media (max-width: ${breakpointFhd}px) {\n    padding-right: 200px;\n  }\n\n  @media (max-width: ${breakpointLargeLaptop}px) {\n    animation-name: hero-image-fade-in-to-100-x;\n    background-position-x: -100px;\n    padding-right: 100px;\n  }\n\n  @media (max-width: ${breakpointLaptop}px) {\n    animation-name: hero-image-fade-in-to-200-x;\n    background-position-x: -200px;\n    padding-right: 50px;\n  }\n\n  @media (max-width: ${breakpointTablet}px) {\n    animation-name: hero-image-fade-in-to-0-x;\n    padding-right: ${bigSpacing}px;\n    background-position-x: 0px;\n    background-position-y: bottom;\n    justify-content: flex-start;\n    align-items: flex-end;\n    flex-direction: column;\n  }\n`;\n\nexport const GradientMask = styled.div`\n  background: rgb(0, 0, 0);\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) 0%,\n    rgba(0, 0, 0, 1) 100%\n  );\n`;\n\nexport const HeroTextWrapper = styled.div`\n  display: flex;\n  margin-top: ${defaultTextMarginTop}px;\n\n  animation-name: hero-text-fade-in;\n  animation-duration: 2000ms;\n  animation-delay: 200ms;\n`;\n\nexport const AvatarWrapper = styled.div`\n  width: ${defaultAvatarSize}px;\n  height: ${defaultAvatarSize}px;\n  border-radius: ${defaultAvatarRadius}px;\n\n  overflow: hidden;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: ${bigSpacing}px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const DemosSubtitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${smallSpacing}px;\n`;\n\nexport const CardsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${mediumSpacing}px;\n\n  @media (max-width: ${breakpointTablet}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SectionCentralizer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  margin: ${bigSpacing}px ${bigSpacing}px ${bigSpacing}px 0px;\n\n  @media (max-width: ${breakpointTablet}px) {\n    margin: ${bigSpacing}px 0px ${bigSpacing}px 0px;\n  }\n`;\n\nexport const SocialsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${mediumSpacing}px;\n`;\n\nexport const SocialWrapper = styled.div`\n  display: flex;\n  margin: ${smallSpacing}px ${smallSpacing}px ${smallSpacing}px\n    ${smallSpacing}px;\n`;\n\nexport const GoogleCalendarSubtitleWrapper = styled.div`\n  margin-top: ${mediumSpacing}px;\n`;\n\nexport const GoogleCalendarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${mediumSpacing}px;\n`;\n\nexport const IFrame = styled.iframe`\n  border-radius: ${mediumRadius}px;\n  background-color: #fff; // I know is not from the theme, but that MUST be this color...\n  height: 840px;\n  width: 100%;\n  max-width: 1300px;\n`;\n","import React from 'react';\nimport {\n  ExampleOwmApiApp,\n  ExampleSB,\n  ExampleSolarDashboard,\n  ExampleSweetLandingLight,\n} from '~/assets';\nimport { ButtonIcon, Card, PageWrapper, Typography } from '~/components';\nimport { error, success } from '~/utils';\nimport {\n  CardWrapper,\n  CardsWrapper,\n  ContentWrapper,\n  DemosSubtitleWrapper,\n  GoogleCalendarSubtitleWrapper,\n  GoogleCalendarWrapper,\n  HeroTextWrapper,\n  HeroWrapper,\n  IFrame,\n  SectionCentralizer,\n  SectionWrapper,\n  SocialWrapper,\n  SocialsWrapper,\n  TitleWrapper,\n} from './styles';\n\nconst examples: Example[] = [\n  {\n    title: 'Solar Dashboard',\n    description:\n      'A simple dashboard created to visualize data from a solar power plant, located at university of URI Santo Ângelo. In this specific project I went fullstack.',\n    imageSrc: ExampleSolarDashboard,\n    href: 'https://dancing-torte-fe54b0.netlify.app/',\n    techs: [\n      'https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white',\n      'https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&logo=styled-components&logoColor=white',\n      'https://img.shields.io/badge/express.js-%23404d59.svg?style=for-the-badge&logo=express&logoColor=%2361DAFB',\n      'https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white',\n      'https://img.shields.io/badge/postgres-%23316192.svg?style=for-the-badge&logo=postgresql&logoColor=white',\n      'https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&logo=react&logoColor=%2361DAFB',\n      'https://img.shields.io/badge/-MobX-FF9955?style=for-the-badge&labelColor=FF9955&logo=mobx&logoColor=white',\n      'https://img.shields.io/badge/git-%23F05033.svg?style=for-the-badge&logo=git&logoColor=white',\n      'https://img.shields.io/badge/axios-%23764ABC.svg?style=for-the-badge&logo=axios&logoColor=white',\n    ],\n  },\n  {\n    title: 'Sweet Landing',\n    description:\n      'This is a Landing Page created to practice animations in css and how to integrate them with Styled Components and React.',\n    imageSrc: ExampleSweetLandingLight,\n    href: 'https://lovely-custard-cea282.netlify.app/',\n    techs: [\n      'https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&logo=react&logoColor=%2361DAFB',\n      'https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&logo=styled-components&logoColor=white',\n      'https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white',\n      'https://img.shields.io/badge/git-%23F05033.svg?style=for-the-badge&logo=git&logoColor=white',\n    ],\n  },\n  {\n    title: 'Open Weather Api Test',\n    description:\n      'Another project that I went full stack, including the React Native App and the backend. If you try it out you might see that takes a little time for the server to turn on again on call.',\n    imageSrc: ExampleOwmApiApp,\n    href: 'https://play.google.com/store/apps/details?id=com.owmapitest',\n    techs: [\n      'https://img.shields.io/badge/react_native-%2320232a.svg?style=for-the-badge&logo=react&logoColor=%2361DAFB',\n      'https://img.shields.io/badge/git-%23F05033.svg?style=for-the-badge&logo=git&logoColor=white',\n      'https://img.shields.io/badge/redux-%23764ABC.svg?style=for-the-badge&logo=redux&logoColor=white',\n      'https://img.shields.io/badge/-GraphQL-E10098?style=for-the-badge&logo=graphql&logoColor=white',\n      'https://img.shields.io/badge/node.js-6DA55F?style=for-the-badge&logo=node.js&logoColor=white',\n      'https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white',\n      'https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&logo=styled-components&logoColor=white',\n      'https://img.shields.io/badge/apollo%20graphql-%23764ABC.svg?style=for-the-badge&logo=apollographql&logoColor=white',\n      'https://img.shields.io/badge/fastlane-00F200?style=for-the-badge&logo=fastlane&logoColor=00F200&color=black',\n    ],\n  },\n  {\n    title: 'SB Landing Page',\n    description: \"A landing page made for an authorized distributor of Eko'7.\",\n    imageSrc: ExampleSB,\n    href: 'https://sognarebene.com.br/',\n    techs: [\n      'https://img.shields.io/badge/nextjs-%2320232a.svg?style=for-the-badge&logo=next.js&logoColor=%23ffffff',\n      'https://img.shields.io/badge/styled--components-DB7093?style=for-the-badge&logo=styled-components&logoColor=white',\n      'https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white',\n      'https://img.shields.io/badge/git-%23F05033.svg?style=for-the-badge&logo=git&logoColor=white',\n    ],\n  },\n];\n\nconst Demo: React.FC = () => {\n  const onClickDiscord = async () => {\n    try {\n      await navigator.clipboard.writeText('Gabão#8356');\n\n      success(\n        <Typography textColor=\"colors.text.disabled\">\n          Discord user &ldquo;Gabão#8356&ldquo; copyed to clipboard!\n        </Typography>,\n      );\n    } catch (err) {\n      error(\n        <Typography textColor=\"colors.text.disabled\">\n          Oops, looks like we&lsquo;re not in a safe context, but anyway... my\n          discord user ID is &ldquo;Gabão#8356&ldquo;\n        </Typography>,\n      );\n    }\n  };\n\n  const socials: Socials[] = [\n    {\n      btnText: 'Discord',\n      icon: 'discord',\n      onClick: onClickDiscord,\n      preventDefaultOnClick: true,\n    },\n    {\n      btnText: 'LinkedIn',\n      icon: 'linkedIn',\n      href: 'https://www.linkedin.com/in/gabriel-taborda-farias-26b9b8160/',\n    },\n    {\n      btnText: 'Github',\n      icon: 'github',\n      href: 'https://github.com/Gabao-Farias',\n    },\n    {\n      btnText: 'E-mail',\n      icon: 'gmail',\n      href: 'mailto:gabrielfariasbass@gmail.com?subject=Portfolio',\n    },\n    {\n      btnText: 'Instagram',\n      icon: 'instagram',\n      href: 'https://www.instagram.com/gabaofarias/',\n    },\n    {\n      btnText: 'Medium',\n      icon: 'medium',\n      href: 'https://gabrielfariasbass.medium.com/',\n    },\n  ];\n\n  return (\n    <PageWrapper>\n      <SectionWrapper>\n        <HeroWrapper>\n          <HeroTextWrapper>\n            <Typography variant=\"headline1\" typographyAlign=\"right\">\n              Needing someone\n              <br />\n              to handle the\n              <br />\n              Front-End?\n            </Typography>\n          </HeroTextWrapper>\n        </HeroWrapper>\n      </SectionWrapper>\n\n      <SectionWrapper>\n        <ContentWrapper>\n          <SectionCentralizer>\n            <Typography variant=\"headline2\" typographyAlign=\"center\">\n              Then maybe\n              <br />I can help you!\n            </Typography>\n          </SectionCentralizer>\n        </ContentWrapper>\n      </SectionWrapper>\n\n      <SectionWrapper>\n        <ContentWrapper>\n          <SectionCentralizer>\n            <TitleWrapper>\n              <Typography variant=\"headline6\">Demos</Typography>\n            </TitleWrapper>\n\n            <DemosSubtitleWrapper>\n              <Typography variant=\"header\" typographyAlign=\"center\">\n                Below you can view some of the demo projects that I&lsquo;ve\n                made, so you can have an idea about what kind of contexts I\n                already had experience!\n              </Typography>\n            </DemosSubtitleWrapper>\n\n            <CardsWrapper>\n              {examples.map(({ description, imageSrc, title, href, techs }) => (\n                <CardWrapper>\n                  <Card\n                    imageSrc={imageSrc}\n                    title={title}\n                    description={description}\n                    href={href}\n                    key={description + title + href}\n                    techs={techs}\n                  />\n                </CardWrapper>\n              ))}\n            </CardsWrapper>\n          </SectionCentralizer>\n        </ContentWrapper>\n      </SectionWrapper>\n\n      <SectionWrapper>\n        <ContentWrapper>\n          <SectionCentralizer>\n            <TitleWrapper>\n              <Typography variant=\"headline6\">Socials</Typography>\n            </TitleWrapper>\n\n            <DemosSubtitleWrapper>\n              <Typography variant=\"header\" typographyAlign=\"center\">\n                If you want to chat or take a coffee with me, you could do that\n                by reaching me out on any social media below...\n              </Typography>\n            </DemosSubtitleWrapper>\n\n            <SocialsWrapper>\n              {socials.map(props => (\n                <SocialWrapper>\n                  <ButtonIcon\n                    {...props}\n                    key={props.btnText + props.href + props.icon}\n                  />\n                </SocialWrapper>\n              ))}\n            </SocialsWrapper>\n          </SectionCentralizer>\n\n          <SectionCentralizer>\n            <GoogleCalendarSubtitleWrapper>\n              <DemosSubtitleWrapper>\n                <Typography variant=\"header\" typographyAlign=\"center\">\n                  ...or, booking any available time on my google calendar\n                  schedule below.\n                </Typography>\n              </DemosSubtitleWrapper>\n            </GoogleCalendarSubtitleWrapper>\n          </SectionCentralizer>\n          <GoogleCalendarWrapper>\n            <IFrame src=\"https://calendar.google.com/calendar/appointments/schedules/AcZssZ1JI7rSlurMq2cCc6QJGPNikhWAmnorUPKYm95E6QZKFPUmVRLJGUNs7kFxUQwaiFYPZgKRIo7L?gv=true\" />\n          </GoogleCalendarWrapper>\n        </ContentWrapper>\n      </SectionWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default Demo;\n","import styled from 'styled-components';\nimport { getThemeByPath } from '~/utils';\n\nconst textMain = getThemeByPath('colors.text.main');\nconst tabletBreakpoint = getThemeByPath('breakpoints.tablet');\n\nexport const Centralizer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Text = styled.h1`\n  text-align: center;\n  color: ${textMain};\n\n  @media (max-width: ${tabletBreakpoint}px) {\n    font-size: 1.4rem;\n  }\n\n  @keyframes hmm {\n    0% {\n      font-size: 1rem;\n    }\n\n    100% {\n      font-size: 99rem;\n    }\n  }\n\n  animation-duration: 600s;\n  animation-name: hmm;\n`;\n","import React from 'react';\nimport { PageWrapper } from '~/components';\nimport { Centralizer, Text } from './styles';\n\nconst NotFound: React.FC = () => {\n  return (\n    <PageWrapper>\n      <Centralizer>\n        <Text>🤔</Text>\n      </Centralizer>\n    </PageWrapper>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Demo, NotFound } from '~/pages';\n\nconst Routes: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={Demo} />\n\n      {/* This is for the Github Pages URL, that's why is this portfolio route below */}\n      <Route path=\"/portfolio/\" exact component={Demo} />\n\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MainProvider } from './contexts';\nimport { Routes } from './routes';\n\nconst App: React.FC = () => {\n  return (\n    <MainProvider>\n      <ToastContainer />\n      <Routes />\n    </MainProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}